# RESPUESTAS:

A.) ¿Quién inventó el sistema de control de versión Git y por qué?:
Git como se conoce normalmente, es un sistema de control de versiones distribuido, y fue inventado por Linus Torvalds en el año 2005, para ser usado en el desarrollo del kernel del sistema 'Linux' y se presenta en formato de CLI, es decir, interfaz de linea de comandos, sin embargo, con el paso de los años, se ha vuelvo muy popular entre los desarrolladores de software, ya que permite tener una gestion y manejo de las versiones del codigo fuente de maner organizada.


B.) ¿A quién pertenece actualmente Github y por qué?
GitHub fue fundada en 2008, y desde su inicio se notaba la popularidad que iba a tener en años posteriores, puesto que genera una gran herramienta para todo desarrollador, llegando a alojar millones de repositorios en su infraestructura. Es por eso que llamo la atencion de Microsoft, empresa conocida en el mundo del software mundialmente, sin embargo, las razones de su adquisicion pueden ser varias, desde la integracion con servicios propios de la nube con AZURE, para hacer competencia directa con AWS de Amazon, incluso hasta acercarse mas a la comundidad de desarrolladores al rededor del mundo, y cambiar el curso de su historia mostrando un gran apoyo al software libre, ya que como se conoce, en decadas pasadas no era la mejor en ese campo llegando incluso al punto de ser odiada por otros. Lo que es evidente es que los tiempos cambian y las perspectivas de las empresas de tecnologia sobre las cosas tambien, la integracion y facilidad que nos ofrece GitHub el dia de hoy es inigualable, y evidencia la estrategia que tiene Microsoft, para seguri con su dominio del software en todos los aspectos en que se puede.


C.) ¿Hay otra forma que no sea la terminal para trabajar con Github?
El software de control de versiones (VCS) GIT, se presenta principalmente a traves de la interfaz de linea de comandos (CLI), puesto que se enfoca en la optimizacion de los procesos y trabajos que lleva a cabo el desarrollador de manera agil, usando la menor cantidad de recursos del equipo cliente que se pueda, ya que usar un entorno con interfaz grafica (GUI) se usan mas recursos lo que puede relentizar el desarrollo, sin embargo, con el avance de los años, las tendencias cambian, y la forma en que las personas acceden a las computadoras y tienen acceso a dispositivos es principalmente a travez de interfaz grafica, por lo que mucho sofware que antes se usaba unicamente en CLI, ha evolucionado para adaptarse a las necesidades del cliente llegando a poder usarse en entornos graficos GUI, un ejemplo de ello podria ser la adaptacion y variaciones que ha tenido GIT, en varios entornos incluso hasta poder presentarse de morma grafica y poder tener un manejo de los procesos que se estan llevando a cabo en su sistema de manera visual en una ventana, la forma mas conocida para poder usar GIT, de manera grafica es su adaptacion 'GITK' que usa la libreria 'tkinter' de python enfocada en interfaces graficas de usuario (GUI)
